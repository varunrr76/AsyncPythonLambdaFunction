name: Build and Deploy Actions
run-name: ${{ github.actor }} is building and deploying the code.
on:
  push:
    paths:
      - 'lambda_function.py'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: 'x64'
      - name: Install dependencies
        run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt --target='.'
      - name: Zip the code
        run: |
        rm -rf AsyncPythonLambdaFunction.zip
        zip -r AsyncPythonLambdaFunction.zip . -x ".github/*" ".stack.yml"
      - name: Configure AWS credentials for Uploading to S3
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION}}
        run: |
          aws s3 cp "AsyncPythonLambdaFunction.zip" "s3://${{ secrets.PROJECT_REPOS }}/"

  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: [Build]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Configure AWS credentials for Deploying
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.REGION}}
  #     - name: Deploy to AWS CloudFormation
  #       uses: aws-actions/aws-cloudformation-github-deploy@v1
  #       with:
  #         name: AsyncPythonLambdaFunction
  #         template: stack.yml